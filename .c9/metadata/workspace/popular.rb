{"changed":true,"filter":false,"title":"popular.rb","tooltip":"/popular.rb","value":"# -*- coding: utf-8 -*-\nrequire 'twitter'\nrequire 'sinatra'\nrequire './configure'\n\nscreen_name = ARGV[0] || 'timoreilly'\n#crondinosaurio no funciona, pues está protegido. Por ello usamos timoreilly.\n\nscreen_number = ARGV[1] || 0\nscreen_number = screen_number.to_i\n\namigos = Hash.new\n\nclient = my_twitter_client() \n#Guardo los ids de mis amigos\n\nseguidores = client.friend_ids(screen_name).attrs[:ids]\n#p seguidores\n\n\n#Buscar el nombre de mi amigo y relacionarlo con el numero de seguidores en el hash de amigos\nn = screen_number - 1\n#Hacemos un for en vez de un each, pues se producen fallos con más de 200 peticiones sin estar registrado en Twitter o 350 estando registrado\n#Si excedemos el número máximo de peticiones, debemos esperar 15min para volver a ejecutar la aplicación\n\n#seguidores.each{ |id|\nfor i in (0..seguidores.length)\n\t#Solo muestro los primeros usuarios sin sobrepasar el limite de peticiones\n\tif (i < 90) \n\t\tid = seguidores[i]\n\t\tamigos[client.user(id).name] = client.user(id).followers_count\n\tend\nend\n#}\n\n#ordenar amigos por mayor número de seguidores\n#mostrar los amigos con más popularidad\n#amigos.each{|key, value| puts\"#{key} tiene #{value} seguidores\"}\nfor i in (0..n)\n\ta = i+1\n\tputs \"#{a}.- #{amigos.key(amigos.values.sort.reverse[i])}  #{amigos.values.sort.reverse[i]} seguidores  \" \nend\n","undoManager":{"mark":-1,"position":1,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":2,"column":17}},"text":"require 'sinatra'"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":17},"end":{"row":2,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1411718699433}